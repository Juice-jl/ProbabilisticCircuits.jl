var documenterSearchIndex = {"docs":
[{"location":"api/internals/utils/#Utils-1","page":"Utils","title":"Utils","text":"","category":"section"},{"location":"api/internals/utils/#","page":"Utils","title":"Utils","text":"Modules = [ProbabilisticCircuits.Utils]","category":"page"},{"location":"api/internals/utils/#ProbabilisticCircuits.Utils","page":"Utils","title":"ProbabilisticCircuits.Utils","text":"Module with general utilities and missing standard library features  that could be useful in any Julia project\n\n\n\n\n\n","category":"module"},{"location":"api/internals/utils/#ProbabilisticCircuits.Utils.generate_all-Tuple{Array{T,1} where T}","page":"Utils","title":"ProbabilisticCircuits.Utils.generate_all","text":"Given some missing values generates all possible fillings\n\n\n\n\n\n","category":"method"},{"location":"api/internals/utils/#ProbabilisticCircuits.Utils.generate_data_all-Tuple{Int64}","page":"Utils","title":"ProbabilisticCircuits.Utils.generate_data_all","text":"Generates all possible binary configurations of size N\n\n\n\n\n\n","category":"method"},{"location":"api/internals/utils/#ProbabilisticCircuits.Utils.mutual_information","page":"Utils","title":"ProbabilisticCircuits.Utils.mutual_information","text":"Calculate mutual information of given bit matrix bm, example weights w, and smoothing pseudocount Î±\n\n\n\n\n\n","category":"function"},{"location":"api/internals/utils/#ProbabilisticCircuits.Utils.DisCache","page":"Utils","title":"ProbabilisticCircuits.Utils.DisCache","text":"Cache pairwise / marginal distribution for all variables in one dataset\n\n\n\n\n\n","category":"type"},{"location":"api/internals/utils/#ProbabilisticCircuits.Utils.one_hot_encode-Union{Tuple{T}, Tuple{Array{T,2},Array{T,1}}} where T","page":"Utils","title":"ProbabilisticCircuits.Utils.one_hot_encode","text":"One-hot encode data (2-D Array) based on categories (1-D Array) Each row of the return value is a concatenation of one-hot encoding of elements of the same row in data Assumption: both input arrays have elements of same type\n\n\n\n\n\n","category":"method"},{"location":"api/internals/utils/#ProbabilisticCircuits.Utils.set_mutual_information-Tuple{Array{T,2} where T,Array{Array{T,1} where T,1}}","page":"Utils","title":"ProbabilisticCircuits.Utils.set_mutual_information","text":"Calculate set mutual information\n\n\n\n\n\n","category":"method"},{"location":"manual/queries/#man-queries-1","page":"Queries","title":"Queries","text":"","category":"section"},{"location":"manual/queries/#Full-Evidence-(EVI)-1","page":"Queries","title":"Full Evidence (EVI)","text":"","category":"section"},{"location":"manual/queries/#Partial-Evidence-(MAR)-1","page":"Queries","title":"Partial Evidence (MAR)","text":"","category":"section"},{"location":"manual/queries/#Conditionals-(CON)-1","page":"Queries","title":"Conditionals (CON)","text":"","category":"section"},{"location":"manual/queries/#Maximum-a-priori-(MAP,-MPE)-1","page":"Queries","title":"Maximum a priori (MAP, MPE)","text":"","category":"section"},{"location":"manual/queries/#Advanced-Queries-1","page":"Queries","title":"Advanced Queries","text":"","category":"section"},{"location":"manual/queries/#Probability-of-logical-Events-1","page":"Queries","title":"Probability of logical Events","text":"","category":"section"},{"location":"manual/queries/#Expected-Prediction-1","page":"Queries","title":"Expected Prediction","text":"","category":"section"},{"location":"manual/queries/#Same-Decision-Probability-1","page":"Queries","title":"Same Decision Probability","text":"","category":"section"},{"location":"installation/#Installation-1","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/#Prerequisites-1","page":"Installation","title":"Prerequisites","text":"","category":"section"},{"location":"installation/#","page":"Installation","title":"Installation","text":"Julia 1.5 or greater. For installation, please refer to the official Julia Website.","category":"page"},{"location":"installation/#Installing-ProbabilisticCircuits-1","page":"Installation","title":"Installing ProbabilisticCircuits","text":"","category":"section"},{"location":"installation/#","page":"Installation","title":"Installation","text":"You can use Julia's package manager, Pkg, to install this module and its dependencies. There are different options on how to do that, for example through command line or julia REPL. For more information and options on how to use Julia pacakge manager, please refer to Pkg's Documentation.","category":"page"},{"location":"installation/#From-Command-Line-1","page":"Installation","title":"From Command Line","text":"","category":"section"},{"location":"installation/#","page":"Installation","title":"Installation","text":"To install the latest stable release, run:","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"julia -e 'using Pkg; Pkg.add(\"ProbabilisticCircuits\")'","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"You can also install the package with the latest commits on master branch. In that case, its also recommented to install the latest LogicCircuits:","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"julia -e 'using Pkg; Pkg.add([PackageSpec(url=\"https://github.com/Juice-jl/LogicCircuits.jl.git\"),PackageSpec(url=\"https://github.com/Juice-jl/ProbabilisticCircuits.jl.git\")])'","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"note: Note\nTo get to Pkg mode, you need to run julia, then to press ]. Press backspace or ^C to get back to normal REPL mode.","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"While in Pkg mode, run the following to install the latest release:","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"add ProbabilisticCircuits","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"Similarly, to install from the latest commits on master branch, run:","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"add LogicCircuits#master\nadd ProbabilisticCircuits#master","category":"page"},{"location":"installation/#Testing-1","page":"Installation","title":"Testing","text":"","category":"section"},{"location":"installation/#","page":"Installation","title":"Installation","text":"If you are installing the latest commit, we recommend running the test suite to make sure everything is in order, to do that run:","category":"page"},{"location":"installation/#","page":"Installation","title":"Installation","text":"julia --color=yes -e 'using Pkg; Pkg.test(\"ProbabilisticCircuits\")'","category":"page"},{"location":"api/internals/loadsave/#LoadSave-1","page":"LoadSave","title":"LoadSave","text":"","category":"section"},{"location":"api/internals/loadsave/#","page":"LoadSave","title":"LoadSave","text":"Modules = [ProbabilisticCircuits.LoadSave]","category":"page"},{"location":"api/internals/loadsave/#LogicCircuits.LoadSave.save_as_dot-Tuple{ProbCircuit,String}","page":"LoadSave","title":"LogicCircuits.LoadSave.save_as_dot","text":"Save prob circuits to .dot file\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#LogicCircuits.LoadSave.save_circuit-Tuple{String,StructProbCircuit,PlainVtree}","page":"LoadSave","title":"LogicCircuits.LoadSave.save_circuit","text":"Save a circuit to file\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.load_logistic_circuit-Tuple{String,Int64}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.load_logistic_circuit","text":"Load a logistic circuit from file. Support circuit file formats:     * \".circuit\" for logistic files Supported vtree file formats:     * \".vtree\" for Vtree files\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.load_prob_circuit-Tuple{String}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.load_prob_circuit","text":"Load a probabilistic circuit from file. Support circuit file formats:     * \".psdd\" for PSDD files\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.load_struct_prob_circuit-Tuple{String,String}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.load_struct_prob_circuit","text":"Load a structured probabilistic circuit from file. Support circuit file formats:     * \".psdd\" for PSDD files Supported vtree file formats:     * \".vtree\" for Vtree files\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.compile_logistic-Tuple{AbstractArray{var\"#s116\",1} where var\"#s116\"<:LogicCircuits.LoadSave.CircuitFormatLine,Int64}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.compile_logistic","text":"Compile lines into a logistic circuit.\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.compile_prob-Tuple{AbstractArray{var\"#s116\",1} where var\"#s116\"<:LogicCircuits.LoadSave.CircuitFormatLine}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.compile_prob","text":"Compile lines into a probabilistic circuit\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.compile_struct_prob-Tuple{AbstractArray{var\"#s116\",1} where var\"#s116\"<:LogicCircuits.LoadSave.CircuitFormatLine,AbstractArray{var\"#s116\",1} where var\"#s116\"<:LogicCircuits.LoadSave.VtreeFormatLine}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.compile_struct_prob","text":"Compile circuit and vtree lines into a structured probabilistic circuit (one whose logic circuit origin is structured).\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.decompile-Tuple{StructProbLiteralNode,Any,Any}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.decompile","text":"Decompile for psdd circuit, used during saving of circuits to file\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.parse_clt-Tuple{String}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.parse_clt","text":"Parse a clt from given file\n\n\n\n\n\n","category":"method"},{"location":"api/internals/loadsave/#ProbabilisticCircuits.LoadSave.psdd_header-Tuple{}","page":"LoadSave","title":"ProbabilisticCircuits.LoadSave.psdd_header","text":"Returns header for PSDD file format\n\n\n\n\n\n","category":"method"},{"location":"#ProbabilisticCircuits.jl-1","page":"Home","title":"ProbabilisticCircuits.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Documentation for ProbabilisticCircuits.jl.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"note: Note\nThe documentation is still under construction and not complete yet. For more information or documentation requests please refer to the github repo for now.","category":"page"},{"location":"api/public/#Public-Documentation-1","page":"Public","title":"Public Documentation","text":"","category":"section"},{"location":"api/public/#","page":"Public","title":"Public","text":"Documentation for ProbabilisticCircuits.jl's public interface.","category":"page"},{"location":"api/public/#","page":"Public","title":"Public","text":"See the Internals section of the manual for internal package docs covering all submodules.","category":"page"},{"location":"api/public/#Contents-1","page":"Public","title":"Contents","text":"","category":"section"},{"location":"api/public/#","page":"Public","title":"Public","text":"Pages = [\"public.md\"]","category":"page"},{"location":"api/public/#Index-1","page":"Public","title":"Index","text":"","category":"section"},{"location":"api/public/#","page":"Public","title":"Public","text":"Pages = [\"public.md\"]","category":"page"},{"location":"api/public/#Public-Interface-1","page":"Public","title":"Public Interface","text":"","category":"section"},{"location":"api/public/#","page":"Public","title":"Public","text":"load_prob_circuit\nload_struct_prob_circuit","category":"page"},{"location":"api/public/#ProbabilisticCircuits.LoadSave.load_prob_circuit","page":"Public","title":"ProbabilisticCircuits.LoadSave.load_prob_circuit","text":"Load a probabilistic circuit from file. Support circuit file formats:     * \".psdd\" for PSDD files\n\n\n\n\n\n","category":"function"},{"location":"api/public/#ProbabilisticCircuits.LoadSave.load_struct_prob_circuit","page":"Public","title":"ProbabilisticCircuits.LoadSave.load_struct_prob_circuit","text":"Load a structured probabilistic circuit from file. Support circuit file formats:     * \".psdd\" for PSDD files Supported vtree file formats:     * \".vtree\" for Vtree files\n\n\n\n\n\n","category":"function"}]
}
